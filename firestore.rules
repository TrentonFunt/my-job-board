rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    function isEmployer() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.userType == "employer";
    }
    
    // Users can read and write their own user document
    match /users/{userId} {
      allow read, write: if isOwner(userId);
      // Allow admins to read all users (for admin panel)
      allow read: if isAdmin();
    }
    
    // Admin-posted jobs - anyone can read, only admins can write
    match /jobs/{jobId} {
      allow read: if true; // Public job listings
      allow write: if isAdmin();
    }
    
    // Employer-posted jobs - anyone can read, only employers can write their own
    match /employerJobs/{jobId} {
      allow read: if true; // Public job listings
      allow create: if isEmployer() && 
        request.auth.uid == resource.data.employerId;
      allow update, delete: if isEmployer() && 
        request.auth.uid == resource.data.employerId;
    }
    
    // Applications - users can read their own, employers can read for their jobs
    match /applications/{applicationId} {
      allow read: if isOwner(resource.data.userId) || 
        (isEmployer() && request.auth.uid == resource.data.employerId);
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.userId;
      allow update: if isEmployer() && 
        request.auth.uid == resource.data.employerId;
    }
    
    // User subcollections - users can only access their own
    match /users/{userId}/{subcollection=**} {
      allow read, write: if isOwner(userId);
    }
    
    // Admin collection - only admin users can access
    match /admin/{document=**} {
      allow read, write: if isAdmin();
    }
    
    // Blog posts - anyone can read, only admins can write
    match /blog/{blogId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Featured jobs - anyone can read, only admins can write
    match /featuredJobs/{jobId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // User feedback - anyone can create, only admins can read/update
    match /feedback/{feedbackId} {
      allow create: if isAuthenticated();
      allow read, update: if isAdmin();
    }
    
    // Notifications - users can read their own, admins can create
    match /notifications/{notificationId} {
      allow read: if isOwner(resource.data.userId);
      allow create: if isAdmin();
    }
    
    // Site settings - anyone can read, only admins can write
    match /settings/{settingId} {
      allow read: if true;
      allow write: if isAdmin();
    }
  }
}
